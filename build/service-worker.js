"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/reasonml-talk-slides/build/index.html","407605edd6b089d5d0af68b52f850e98"],["/reasonml-talk-slides/build/static/css/main.000c42fe.css","01bb53874271d1b07cc75391149ef114"],["/reasonml-talk-slides/build/static/js/main.d015bfdd.js","9cd86a20954fcc3b210cf9d6b5dcf7ed"],["/reasonml-talk-slides/build/static/media/bsb.4a749ed2.png","4a749ed2c2c4e426020bf20cf2a8e698"],["/reasonml-talk-slides/build/static/media/component.7cd3ae63.png","7cd3ae636dfd32737bf0e89e19a9d00e"],["/reasonml-talk-slides/build/static/media/converted.23e8d826.png","23e8d8268775b3a3bbba8cc55eaa110a"],["/reasonml-talk-slides/build/static/media/css-and-logo.1803f999.png","1803f999e4c8065cc69c850327c80634"],["/reasonml-talk-slides/build/static/media/editor.ce836f50.png","ce836f50262365934933a251e5be5549"],["/reasonml-talk-slides/build/static/media/initialState.c0dbd9a6.png","c0dbd9a65f9ce74dfe4bfe1ef1f72f80"],["/reasonml-talk-slides/build/static/media/logo.dff7fa15.png","dff7fa1562197af1da5a44db22c1498d"],["/reasonml-talk-slides/build/static/media/logo.e2342b05.svg","e2342b05e19639d46eb7fb727b3ce8dd"],["/reasonml-talk-slides/build/static/media/make.1c600cf5.png","1c600cf582f807b6ba396a456b32cb3b"],["/reasonml-talk-slides/build/static/media/options.5644e2f3.png","5644e2f3e607441c81595c38a27101fa"],["/reasonml-talk-slides/build/static/media/reduce.142ff64d.png","142ff64dd907101ee2207e32739e15a1"],["/reasonml-talk-slides/build/static/media/render.b7d4b987.png","b7d4b987f7b735557566670a7034c1d3"],["/reasonml-talk-slides/build/static/media/types.9d016a54.png","9d016a54b9402e5f5f9f418d0789be6a"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var s=new URL(e);return n&&s.pathname.match(n)||(s.search+=(s.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),s.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),s=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),s]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/reasonml-talk-slides/build/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});